generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Notice {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  category    String
  publishedAt DateTime @default(now())
  isPinned    Boolean  @default(false) // Add this field
  createdAt   DateTime @default(now()) // Add this field
}

model ResultSession {
  id          String      @id @default(cuid())
  title       String
  courseCode  String
  semester    Int
  examDate    DateTime?
  isPublished Boolean     @default(false)
  rows        ResultRow[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model ResultRow {
  id          String        @id @default(cuid())
  sessionId   String
  session     ResultSession @relation(fields: [sessionId], references: [id])
  rollNo      String
  studentName String
  sgpa        Float?
  cgpa        Float?
  grade       String?
  status      String?
  createdAt   DateTime      @default(now())
}

model Applicant {
  id              String    @id @default(cuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  fullName        String
  email           String
  phone           String
  courseCode      String
  dob             DateTime?
  address         String
  fatherName      String
  motherName      String
  qualification   String
  classXMarksheet String    // File name or path for Class X mark sheet
  classXiiMarksheet String  // File name or path for Class XII mark sheet
  passportPhoto   String    // File name or path for passport photo
  status          String    @default("submitted")
}

model Payment {
  id              String    @id @default(cuid())
  paymentId       String    @unique
  candidateName   String
  enrollmentNumber String
  courseName      String
  semester        String
  amount          Float
  currency        String
  status          String    @default("pending")
  created_at      DateTime  @default(now())
}
